version: "3"

services:
  proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.1
    # Enables the web UI and tells Traefik to listen to docker

    command: --providers.docker --api.insecure=true
    # command:  --api.insecure=true --providers.docker
    #           --logLevel=info \
    #           --acme \
    #           --acme.acmelogging \
    #           --acme.dnschallenge=false
    #           --acme.entrypoint="https" \
    #           --acme.httpchallenge \
    #           --acme.httpChallenge.entryPoint="http" \
    #           --acme.onhostrule=true \
    #           --acme.storage="/etc/traefik/acme.json"
    #           --acme.email="almoreno@eliteflower.com"
    #           --entrypoints="Name:http Address::80 Redirect.EntryPoint:https" \
    #           --entrypoints="Name:https Address::443 TLS" \
    #           --defaultentrypoints="http:https"

    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  front:
    image: nginx
    container_name: front
    labels:
      - "traefik.http.routers.front.rule=Host(`thegraph.eliteflower.co`)"
    restart: always
    volumes:
      - /usr/share/zoneinfo/America/Bogota:/etc/localtime
      - ./front/dist/front/:/usr/share/nginx/html/
      - ./nginx/:/etc/nginx/

  back:
    image: node
    container_name: back
    labels:
      - "traefik.http.routers.back.rule=Host(`thegraphdata.eliteflower.co`)"
      - "traefik.http.services.back.loadbalancer.server.port=3000"
    restart: always
    working_dir: /home/node/thegraph
    environment:
      - NODE_ENV=production
    volumes:
      - ./back/:/home/node/thegraph

    command: "npm start"

  mssql:
    image: microsoft/mssql-server-linux:latest
    container_name: mssql
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.mssql.rule=HostSNI(`thegraphdb.eliteflower.co`)
      - traefik.tcp.routers.mssql.tls=true
      - traefik.tcp.routers.mssql.service=mssql
      - traefik.tcp.services.mssql.loadbalancer.server.port=1433
    volumes:
      - ./mssql/data:/var/opt/mssql/data
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=4dm1nPr0c
